<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<transform version="0.0.4" validateOutputs="false" validateInputs="false" targetNamespace="http://www.c24.biz/IO/Transforms/Common" readOnly="false" processingOrder="Outputs" encrypted="false" IOversion="3.1.0" name="MT70ROC_To_MX35Text.tfd">
    <input typeRef="Data Field Dictionary/Subfields/Details of Payment" required="true" path="" modelRef="../SWIFT FIN November 2008 Data Dictionary.dod" endID="0"/>
    <transformMethod name="INSTANCE" y="206" x="104" id="1"/>
    <transformMethod name="CONCAT" y="49" x="229" id="2"/>
    <transformMethod name="INSTANCE" y="85" x="104" id="3"/>
    <transformMethod name="INSTANCE" y="29" x="103" id="4"/>
    <transformMethod name="CONCAT" y="174" x="231" id="5"/>
    <transformMethod name="CONCAT" y="102" x="367" id="6"/>
    <transformMethod name="INSTANCE" y="146" x="105" id="7"/>
    <constant constant="0" id="8"/>
    <constant constant="1" id="9"/>
    <constant constant="2" id="10"/>
    <constant constant="3" id="11"/>
    <contextPath input="true" endID="0" contextRef="Line 35x" id="12"/>
    <javaMethodRef refId="15" y="104" x="509" id="14"/>
    <transformMethod name="SUBSTRING" y="90" x="713" id="20"/>
    <constant constant="0" id="21"/>
    <constant constant="35" id="22"/>
    <contextPath input="false" endID="0" contextRef="" id="18"/>
    <translation outputPort="0" outputID="6" inputPort="0" inputID="2"/>
    <translation outputPort="1" outputID="6" inputPort="0" inputID="5"/>
    <translation outputPort="1" outputID="4" inputPort="0" inputID="8"/>
    <translation outputPort="1" outputID="3" inputPort="0" inputID="9"/>
    <translation outputPort="1" outputID="7" inputPort="0" inputID="10"/>
    <translation outputPort="1" outputID="1" inputPort="0" inputID="11"/>
    <translation outputPort="0" outputID="4" inputPort="0" inputID="12"/>
    <translation outputPort="0" outputID="3" inputPort="0" inputID="12"/>
    <translation outputPort="0" outputID="7" inputPort="0" inputID="12"/>
    <translation outputPort="0" outputID="1" inputPort="0" inputID="12"/>
    <translation outputPort="0" outputID="2" inputPort="0" inputID="4"/>
    <translation outputPort="1" outputID="2" inputPort="0" inputID="3"/>
    <translation outputPort="0" outputID="5" inputPort="0" inputID="7"/>
    <translation outputPort="1" outputID="5" inputPort="0" inputID="1"/>
    <translation outputPort="0" outputID="14" inputPort="0" inputID="6"/>
    <translation outputPort="0" outputID="20" inputPort="0" inputID="14"/>
    <translation outputPort="1" outputID="20" inputPort="0" inputID="21"/>
    <translation outputPort="2" outputID="20" inputPort="0" inputID="22"/>
    <translation outputPort="0" outputID="18" inputPort="0" inputID="20"/>
    <nextId>26</nextId>
    <documentation>
        <notes>&lt;h3&gt;MT70ROC_To_MX35Text&lt;/h3&gt;

&lt;b&gt;Business description&lt;/b&gt;
The function isolates the string that follows a code /ROC/ in an MT remittance information field 70 and restricts the output string to maximum 35 characters.

&lt;b&gt;Format&lt;/b&gt;
MT70ROC_To_MX35Text(MT70 ; MX35Text)

&lt;b&gt;Input&lt;/b&gt;
MT70: remittance information in an MT field 70 (format 4*35x).

&lt;b&gt;Output&lt;/b&gt;
MX35Text: string of characters in the MX message typed Max35Text.

&lt;b&gt;Preconditions&lt;/b&gt;
None.

&lt;b&gt;Formal description&lt;/b&gt;
&lt;pre&gt;
/* MT70 is defined by 4 lines of 35 characters */
/*
   Basic function ExtractBetweenPattern extracts the information between the code /ROC/ and one of the other available codes in
   field 70: /INV/, /RFB/ and /IPI/. If none of these codes is encountered, the output string will be the information following
   /ROC/ until the end of field 70. If the information is spread over more than one line, then the function removes the MT line
   separator &quot;CRLF&quot;. MT70ROC is a local variable
*/
MT70ROC = ExtractBetweenPatterns(MT70, “/ROC/”, {“/INV/”, “/IPI/”, “/RFB/”})
/* Limit the output string to 35 characters */
MX35Text = Substring(MT70ROC, 1, 35)
&lt;/pre&gt;</notes>
    </documentation>
    <output typeRef="#string" required="false" path="" endID="0"/>
    <javaMethod id="15">
        <libraryMethod>false</libraryMethod>
        <methodName>extractROC</methodName>
        <input type="#string" role="text"/>
        <output type="#string"/>
        <code>if (null != text) {&#xD;
    int start = text.indexOf(&quot;/ROC/&quot;);&#xD;
    if (0 &lt;= start) {&#xD;
        final String[] terms = new String[] {&quot;/INV/&quot;, &quot;/RFB/&quot;, &quot;/IPI/&quot;};&#xD;
        int end = text.length();&#xD;
        for (int i = terms.length; i--&gt;0;) {&#xD;
            int pos = text.indexOf(terms[i]);&#xD;
            if (0 &lt; pos &amp;&amp; pos &lt; end) {&#xD;
                end = pos; &#xD;
            }&#xD;
        }&#xD;
        return text.substring(start + &quot;/ROC/&quot;.length(), end);&#xD;
    }&#xD;
}&#xD;
return null;&#xD;
        </code>
    </javaMethod>
</transform>
